version: '1.0.0.{build}'
branches:
  only:
    - master
    - msvc2017

image: Visual Studio 2019
clone_depth: 1
environment:
  global:
    LatestLTSQtVersion: 5.14
    boost_path: C:\Libraries\boost_1_73_0
  matrix:
  - NAME: KArchiveMSVC2019x64
    module_name: KArchive
    module_repo: karchive.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KArchiveMSVC2019x32
    module_name: KArchive
    module_repo: karchive.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KCodecsMSVC2019x64
    module_name: KCodecs
    module_repo: kcodecs.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KCodecsMSVC2019x32
    module_name: KCodecs
    module_repo: kcodecs.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KItemModelsMSVC2019x64
    module_name: KItemModels
    module_repo: kitemmodels.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KItemModelsMSVC2019x32
    module_name: KItemModels
    module_repo: kitemmodels.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KItemViewsMSVC2019x64
    module_name: KItemViews
    module_repo: kitemviews.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KItemViewsMSVC2019x32
    module_name: KItemViews
    module_repo: kitemviews.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KCoreAddonsMSVC2019x64
    module_name: KCoreAddons
    module_repo: kcoreaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KCoreAddonsMSVC2019x32
    module_name: KCoreAddons
    module_repo: kcoreaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KGuiAddonsMSVC2019x64
    module_name: KGuiAddons
    module_repo: kguiaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KGuiAddonsMSVC2019x32
    module_name: KGuiAddons
    module_repo: kguiaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KWidgetsAddonsMSVC2019x64
    module_name: KWidgetsAddons
    module_repo: kwidgetsaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KWidgetsAddonsMSVC2019x32
    module_name: KWidgetsAddons
    module_repo: kwidgetsaddons.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38
  - NAME: KIdleTimeMSVC2019x64
    module_name: KIdleTime
    module_repo: kidletime.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017_64
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: amd64
    python_path: C:\Python38-x64
  - NAME: KIdleTimeMSVC2019x32
    module_name: KIdleTime
    module_repo: kidletime.git
    QT5: C:\Qt\%LatestLTSQtVersion%\msvc2017
    COMPILER: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build
    comp_platform: x86
    python_path: C:\Python38

matrix:
  fast_finish: true

before_build:
- set need_gperf=false
- if %module_name%==KCodecs set need_gperf=true
- set need_bzip2=false
- if %module_name%==KArchive set need_bzip2=true
- set need_zlib=false
- if %module_name%==KArchive set need_zlib=true
- set need_liblzma=false
- if %module_name%==KArchive set need_liblzma=true
- set PATH=%boost_path%;%python_path%;%python_path%\Scripts%PATH%
- python -m pip install -U pip
- pip install -U Sphinx
- set originalWD=%CD%
- call "%QT5%\bin\qtenv2.bat"
- cd %originalWD%
- echo on
- call "%COMPILER%\vcvarsall.bat" %comp_platform%
- set CMAKEGENERATOR="NMake Makefiles"
- if %need_gperf%==true mkdir .\gperf
- if %need_gperf%==true cd .\gperf
- if %need_gperf%==true curl -k -L https://sourceforge.net/projects/gnuwin32/files/gperf/3.0.1/gperf-3.0.1-bin.zip --output gperf.zip
- if %need_gperf%==true 7z x gperf.zip
- if %need_gperf%==true move /Y gperf.zip ..\
- if %need_gperf%==true set PATH=%CD%\bin;%PATH%
- if %need_gperf%==true cd ..\
- if %need_bzip2%==true git clone --depth=1 https://gitlab.com/federicomenaquintero/bzip2.git bzip2src
- if %need_bzip2%==true cd .\bzip2src
- if %need_bzip2%==true mkdir .\build 
- if %need_bzip2%==true cd .\build
- if %need_bzip2%==true cmake -G %CMAKEGENERATOR% -DENABLE_LIB_ONLY=ON -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX=../../bzip2 ../
- if %need_bzip2%==true cmake --build . --config Release
- if %need_bzip2%==true cmake --build . --target install --config Release
- if %need_bzip2%==true cd ..\..\
- if %need_bzip2%==true set PATH=%CD%\bzip2;%PATH%
- if %need_bzip2%==true 7z a -tzip bzip2.zip .\bzip2\*
- if %need_liblzma%==true mkdir .\liblzma
- if %need_liblzma%==true cd .\liblzma
- if %need_liblzma%==true curl -k -L https://tukaani.org/xz/xz-5.2.4-windows.zip --output liblzma.zip
- if %need_liblzma%==true 7z x liblzma.zip
- if %need_liblzma%==true del /F /Q liblzma.zip
- if %need_liblzma%==true mkdir lib && mkdir bin
- if %need_liblzma%==true curl -k -L https://tukaani.org/xz/xz-5.2.5.tar.gz --output liblzma.tar.gz
- if %need_liblzma%==true 7z x liblzma.tar.gz
- if %need_liblzma%==true del /F /Q liblzma.tar.gz
- if %need_liblzma%==true 7z x liblzma.tar
- if %need_liblzma%==true del /F /Q liblzma.tar
- if %need_liblzma%==true cd xz-5.2.5\windows\vs2019
- if %need_liblzma%==true if %comp_platform%==x86 (msbuild xz_win.sln /property:Configuration=Release /property:Platform=Win32 && xcopy /Y /I /K Release\Win32\liblzma_dll\*.dll ..\..\..\bin && xcopy /Y /I /K Release\Win32\liblzma_dll\*.lib ..\..\..\lib)
- if %need_liblzma%==true if %comp_platform%==amd64 (msbuild xz_win.sln /property:Configuration=Release /property:Platform=x64 && xcopy /Y /I /K Release\x64\liblzma_dll\*.dll ..\..\..\bin && xcopy /Y /I /K Release\x64\liblzma_dll\*.lib ..\..\..\lib)
- if %need_liblzma%==true cd ..\..\..\
- if %need_liblzma%==true set PATH=%CD%;%PATH%
- if %need_liblzma%==true cd ..\
- if %need_liblzma%==true 7z a -tzip liblzma.zip .\liblzma\include\
- if %need_liblzma%==true 7z a -tzip liblzma.zip .\liblzma\lib\
- if %need_liblzma%==true 7z a -tzip liblzma.zip .\liblzma\bin\
- if %need_zlib%==true git clone https://github.com/madler/zlib.git zlibBuild
- if %need_zlib%==true cd zlibBuild
- if %need_zlib%==true mkdir .\build
- if %need_zlib%==true cd .\build
- if %need_zlib%==true cmake -G %CMAKEGENERATOR% -DCMAKE_INSTALL_PREFIX=../../zlib -DCMAKE_BUILD_TYPE=RELEASE ../
- if %need_zlib%==true cmake --build .
- if %need_zlib%==true cmake --build . --target install
- if %need_zlib%==true cd ..\..\
- if %need_zlib%==true 7z a -tzip zlib.zip .\zlib\*
- if %need_zlib%==true set PATH=%CD%\zlib;%PATH%
- git clone --depth=1 git://anongit.kde.org/extra-cmake-modules ECM
- cd ECM
- mkdir .\build 
- cd .\build
- cmake -G %CMAKEGENERATOR% -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=../../ECMbuild -DCMAKE_BUILD_TYPE=RELEASE ../
- cmake --build .
- cmake --build . --target install
- cd ..\..\
- set PATH=%CD%\ECMbuild;%PATH%

build_script:
- git clone --depth=1 git://anongit.kde.org/%module_repo% %module_name%
- cd %module_name%
- mkdir .\build 
- cd .\build
- cmake -G %CMAKEGENERATOR% -DBUILD_TESTING=OFF -DCMAKE_DEBUG_POSTFIX=d -DCMAKE_INSTALL_PREFIX=../../KDEAPI -DCMAKE_BUILD_TYPE=DEBUG ../
- cmake --build .
- cmake --build . --target install
- cmake -G %CMAKEGENERATOR% -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=../../KDEAPI -DCMAKE_BUILD_TYPE=RELEASE ../
- cmake --build .
- cmake --build . --target install
- cd ..\..\

after_build:
- 7z a -tzip %module_name%.zip .\KDEAPI\*

artifacts:
- path: '.\*.zip'